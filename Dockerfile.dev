FROM fedora:39

LABEL maintainer="Codeium Engineering Team"
LABEL description="Development image for pxbkup-clstradmin - PX-Backup Cluster Administration Service"

# Install system dependencies
RUN dnf update -y && \
    dnf install -y \
    python3.9 \
    python3-pip \
    python3-devel \
    gcc \
    git \
    ansible \
    postgresql-devel \
    openssl-devel \
    libffi-devel \
    curl \
    vim \
    procps \
    htop \
    && dnf clean all \
    && rm -rf /var/cache/dnf/*

# Create non-root user
RUN useradd -m -s /bin/bash pxbackup

# Create directories
RUN mkdir -p /app /app/instance /app/playbooks /runner \
    && chown -R pxbackup:pxbackup /app /runner

WORKDIR /app

# Copy requirements first for better caching
COPY requirements*.txt ./
RUN pip3 install --no-cache-dir -r requirements.txt -r requirements-dev.txt

# Install development tools
RUN pip3 install --no-cache-dir \
    debugpy \
    ipython \
    ipdb

# Copy application code
COPY . .
RUN chown -R pxbackup:pxbackup /app

# Switch to non-root user
USER pxbackup

# Set environment variables
ENV PYTHONPATH=/app
ENV FLASK_APP=app
ENV FLASK_ENV=development
ENV FLASK_DEBUG=1
ENV PROMETHEUS_MULTIPROC_DIR=/tmp
ENV APP_NAME=pxbkup-clstradmin
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Enable hot reloading for development
ENV FLASK_RUN_EXTRA_FILES=/app/app:/app/migrations

# Expose ports
EXPOSE 5000
# Debug port
EXPOSE 5678

# Health check for development
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Use an entrypoint script for development
COPY scripts/docker-entrypoint-dev.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["flask", "run", "--host=0.0.0.0", "--reload"]
