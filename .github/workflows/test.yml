name: Test and Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly security checks

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Check for outdated dependencies
      run: |
        pip list --outdated

    - name: Run tests with pytest
      env:
        FLASK_ENV: "testing"
        SQLALCHEMY_DATABASE_URI: "sqlite:///memory:"
        REDIS_URL: "redis://localhost:6379/1"
        VAULT_ADDR: "http://localhost:8200"
        VAULT_TOKEN: "test-token"
        INVENTORY_API_URL: "http://localhost:8080"
        KEYCLOAK_URL: "http://localhost:8080"
        KEYCLOAK_REALM: "test-realm"
        GITEA_URL: "http://localhost:3000"
        GITEA_PLAYBOOKS_REPO: "test/playbooks"
      run: |
        pytest --cov=app --cov-report=xml --cov-report=html --junitxml=test-results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          test-results.xml
          htmlcov/
        retention-days: 30

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy isort bandit safety pylint

    - name: Check formatting with black
      run: black --check app tests

    - name: Check imports with isort
      run: isort --check-only app tests

    - name: Lint with flake8
      run: flake8 app tests --max-complexity=10 --max-line-length=100

    - name: Type check with mypy
      run: mypy app tests --strict

    - name: Lint with pylint
      run: pylint app tests --fail-under=8.0

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run security check with bandit
      run: bandit -r app -ll -ii -f json -o bandit-results.json

    - name: Check for known vulnerabilities
      run: safety check

    - name: Run SAST with semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: p/python

    - name: Upload security results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-results
        path: bandit-results.json
        retention-days: 30

  ansible-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install ansible-lint
      run: |
        python -m pip install --upgrade pip
        pip install ansible-lint

    - name: Run ansible-lint
      run: ansible-lint playbooks/

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v3

    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: high
